//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Domain
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    public partial class Contrat
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Contrat()
        {
            this.ContratBien = new HashSet<ContratBien>();
            this.ContratVehicule = new HashSet<ContratVehicule>();
        }
    
        public int Id_contrat { get; set; }
        public int idDelegation { get; set; }
        public int Id_fournisseur { get; set; }
        [Required(ErrorMessage = "Le type de contrat est obligatoire")]
        [StringLength(30, MinimumLength = 5, ErrorMessage = "Le type de contrat  doit contenir entre 5 et 30 caractères")]
        [RegularExpression(@"^[a-zA-Z 0-9éèêâùÉÈ]+$", ErrorMessage = "Le type de contrat est invalide: exemple contrat d'assurence")]
        public string Type_Contrat { get; set; }

        [Required(ErrorMessage = "Le numéro  est obligatoire")]
        [StringLength(6, MinimumLength = 1, ErrorMessage = "Champ invalide")]
        [RegularExpression(@"^[0-9]+$", ErrorMessage = "Le numéro est invalide")]
        public Nullable<int> Num { get; set; }
        public Nullable<System.DateTime> Date_debut { get; set; }
        public Nullable<System.DateTime> Date_fin { get; set; }
        [Required(ErrorMessage = "Le coût est obligatoire")]
        [RegularExpression(@"[0-9]+([,][0-9]{0,3})?", ErrorMessage = "Le coût est invalid.Exemlpe: 2000,000")]
        public Nullable<double> Cout { get; set; }
        [Required(ErrorMessage = "Le sous-type de contrat est obligatoire")]
        [StringLength(30, MinimumLength = 5, ErrorMessage = "Le sous-type de contrat  doit contenir entre 5 et 30 caractères")]
        [RegularExpression(@"^[a-zA-Z 0-9éèêâùÉÈ]+$", ErrorMessage = "Le sous-type de contrat est invalide: exemple tous risques")]
        public string Sous_Type_Contrat { get; set; }
    
        public virtual Fournisseur Fournisseur { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ContratBien> ContratBien { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ContratVehicule> ContratVehicule { get; set; }
    }
}
