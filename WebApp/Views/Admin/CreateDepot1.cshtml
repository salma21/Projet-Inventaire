@model Domain.Depot

@{


    List<string> listRegion = new List<string>();
    List<string> listGouvernorat = new List<string>();
    List<string> listDelegation = new List<string>();
    }
<script language="javascript" type="text/javascript">
    function GetCity(_stateId) {
        var procemessage = "<option value='0'>Encours...</option>";
        $("#ddlcity").html(procemessage).show();
        var url = "/Gestion/GetRegionByPays/";

        $.ajax({
            url: url,
            data: { stateid: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddlcity").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>

<script language="javascript" type="text/javascript">
    function GetGouvernorat(_stateId) {
        var procemessage = "<option value='0'>Encours...</option>";
        $("#ddlgouv").html(procemessage).show();
        var url = "/Gestion/GetGouvernoratByRegion/";

        $.ajax({
            url: url,
            data: { stateid: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddlgouv").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>
<script language="javascript" type="text/javascript">
    function getDeleg(_stateId) {
        var procemessage = "<option value='0'>Encours...</option>";
        $("#ddldeleg").html(procemessage).show();
        var url = "/Gestion/findDelegationByGouvernorat/";

        $.ajax({
            url: url,
            data: { stateid: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddldeleg").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-title">
                Dépôt
            </div>
            <div class="panel-body">



                <div class="panel panel-default">

                    <h2>Ajout Dépôt</h2>

                    @using (Html.BeginForm("CreateDepot", "Admin", FormMethod.Post,
new { @id = "frmId", @class = "fieldset-form" }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr />




                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Désignation </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.libelle, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.libelle, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Pays </label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(m => m.idPays, (SelectList)ViewData["pays"], "--Choisir--", new { @id = "ddlstate", @class = "form-control", required = "", @onchange = "javascript:GetCity(this.value);" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Region </label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(m => m.idRegion, new SelectList(listRegion), "--Choisir--", new { @id = "ddlcity", @class = "form-control", required = "", @onchange = "javascript:GetGouvernorat(this.value);" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Gouvernorat </label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(m => m.idGouvernorat, new SelectList(listGouvernorat), "--Choisir--", new { @id = "ddlgouv", @class = "form-control", required = "", @onchange = "javascript:getDeleg(this.value);" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Délégation </label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.idDelegation, new SelectList(listDelegation), "--Choisir--", new { @id = "ddldeleg", @class = "form-control", required = "" })
                                </div>
                            </div>



                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Adresse </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Rue, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Rue, "", new { @class = "text-danger" })
                                </div>
                            </div>



                            <div style="text-align: center;">
                                <input type="submit" value="Valider" class="btn btn-default" />

                                <button type="reset" class="btn btn-white">@Html.ActionLink("Annuler", "getDepots")</button>

                            </div>
                        </div>



                    }


                </div>

                <div>
                    @Html.ActionLink("Liste des dépôts", "getDepots")
                </div>

            </div>
        </div>
    </div>
</div>