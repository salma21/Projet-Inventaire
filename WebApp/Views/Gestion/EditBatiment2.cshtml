@model Domain.Batiment

@{               }

<h2>EditBatiment</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
                    <div class="form-horizontal">
        <h4>Batiment</h4>
        <hr />
        @Html.HiddenFor(model => model.idBatiment)
        <div class="form-group">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { @class = "form-control", required = "" })
                @Html.ValidationMessageFor(model => model.description, String.Empty, new { @class = "test" })
            </div>
        </div>

        <div class="form-group">
            @Html.TextBoxFor(model => model, new { @class = "form-control", @readonly = "readonly" })
            <div class="col-md-10">
     


               @Html.ValidationMessageFor(model => model.code_a_barre, String.Empty, new { @class = "test" })
                @Html.TextBoxFor(model => model.Organisation.libelle, new { @class = "form-control", disabled = "disabled" });
            </div>
        </div>

        <div class="form-group">
            @Html.EditorFor(model => model.code, new { @class = "form-control", required = "" })
            <div class="col-md-10">
                 @Html.ValidationMessageFor(model => model.code, String.Empty, new { @class = "test" })
                @Html.EditorFor(model => model.Delegation.Code_postal, new { @class = "form-control", required = "True" })
            </div>
        </div>

        <div class="form-group">
            @Html.ValidationMessageFor(model => model.Delegation.Code_postal, String.Empty, new { @class = "test" });



 @Html.TextBoxFor(model => model.Delegation.Gouvernorat.Region.Pays.libelle, new { @class = "form-control", disabled = "disabled" })
            <div class="col-md-10">
         @Html.TextBoxFor(model => model.Delegation.Gouvernorat.Region.libelle, new { @class = "form-control", disabled = "disabled" })
                @Html.TextBoxFor(model => model.Delegation.Gouvernorat.libelle, new { @class = "form-control", disabled = "disabled" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-lg-4" style="font-style:oblique;">Délégation </label>
            <div class="col-lg-6">
                @Html.TextBoxFor(model => model.Delegation.libelle, new { @class = "form-control", disabled = "disabled" })
                @*@Html.DropDownListFor(model => model.idDelegation, (SelectList)ViewData["delegations"], "--Choisir--", new { @class = "form-control", required = "" })*@
            </div>
        </div>
        @Html.ActionLink("Annuler", "GetBatiment")

        @Html.HiddenFor(model => model.idBatiment)

        <div class="form-group">
            @Html.LabelFor(model => model.code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.code_a_barre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.code_a_barre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.code_a_barre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
