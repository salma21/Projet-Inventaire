@model Domain.MouvementBien


@{
    List<string> listDeleg = new List<string>();
    List<string> listBat = new List<string>();
    List<string> listEtage = new List<string>();
    List<string> listBien = new List<string>();
}


<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">

    function GetBat(_delegid) {
        var procemessage = "<option value='0'>En cours</option>";
        $("#Bat").html(procemessage).show();
        var url = "/Gestion/FindBatimentByDelegation/";

        $.ajax({
            url: url,
            data: { delegid: _delegid },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#Bat").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
    function GetEtage(_batid) {
        var procemessage = "<option value='0'>En cours</option>";
        $("#Etage").html(procemessage).show();
        var url = "/Gestion/GetEtageByBatiment/";

        $.ajax({
            url: url,
            data: { batid: _batid },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#Etage").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }

    function GetBien(_etid) {
        var procemessage = "<option value='0'>En cours</option>";
        $("#Bien").html(procemessage).show();
        var url = "/Gestion/FindBienByEtage/";

        $.ajax({
            url: url,
            data: { etid: _etid },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#Bien").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>


<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-title">
                Ajout mouvement bien
            </div>
            <div class="panel-body">



                <div class="panel panel-default">




                    @using (@Html.BeginForm("CreateMouvementBien", "Gestion", FormMethod.Post,
new { @id = "frmId", @class = "fieldset-form" }))
                    {

                        <div class="form-horizontal">
                            <h4>Bien</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Code à barre </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Nom, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Nom, String.Empty, new { @class = "test" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Désignation</label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Nom, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Nom, String.Empty, new { @class = "test" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Délégation</label>
                                <div class="col-lg-6">
                                    @*@Html.DropDownListFor(model => model.Vehicule.Parc_auto.Batiment.Delegation.idDelegation, (SelectList)ViewData["delegation"] ,"--Choisir--", new { @id = "ddlstate", @class = "form-control", required = "True", @onchange = "javascript:GetBat(this.value);" })*@
                                    @Html.DropDownList("Delegation", (SelectList)ViewData["delegation"], "--Choisir--", new { @id = "ddlstate", @class = "form-control", required = "True", @onchange = "javascript:GetBat(this.value);" })

                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Batiment</label>
                                <div class="col-lg-6">
                                    @Html.DropDownList("Batiment", (SelectList)ViewData["batiment"], "--Choisir--", new { @id = "Bat", @class = "form-control", required = "True", @onchange = "javascript:GetEtage(this.value);" })
                                    @*@Html.DropDownListFor(model => model.Vehicule.Parc_auto.Batiment.idBatiment, (SelectList)ViewData["batiment"], "--Choisir--", new { @id = "Bat", @class = "form-control", required = "True", @onchange = "javascript:GetParc(this.value);" })*@
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Étage</label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.Id_etage, (SelectList)ViewData["etage"], "--Choisir--", new { @id = "Etage", @class = "form-control", required = "True", @onchange = "javascript:GetBien(this.value);" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Bien</label>
                                <div class="col-lg-6">
                                    @Html.DropDownListFor(model => model.Id_bien, new SelectList(listBien), "--Choisir--", new { @id = "Bien", @class = "form-control", required = "True" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Nom </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Nom, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Nom, String.Empty, new { @class = "test" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Derniére affectation </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_derniere_affectation, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_derniere_affectation, String.Empty, new { @class = "test" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Date derniére affectation </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_derniere_affectation, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_derniere_affectation, String.Empty, new { @class = "test" })
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Date prochaine affectation </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_prochaine_affectation, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_prochaine_affectation, String.Empty, new { @class = "test" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Date renouvellement </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_renouvellement_prevue, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_renouvellement_prevue, String.Empty, new { @class = "test" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Date retour prévue </label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_retour_prevue, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_retour_prevue, String.Empty, new { @class = "test" })
                                </div>
                            </div>


                            <div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Date sortie</label>
                                <div class="col-lg-6">

                                    @Html.EditorFor(model => model.Date_sortie, new { @class = "form-control", required = "True" })
                                    @Html.ValidationMessageFor(model => model.Date_sortie, String.Empty, new { @class = "test" })
                                </div>
                            </div>



                        </div>

                        <div style="text-align: center;">
                            <input type="submit" value="Valider" class="btn btn-default" />

                            <button type="reset" class="btn btn-white">@Html.ActionLink("Annuler", "GetMouvementBien")</button>

                        </div>

                    }


                </div>

                <div>
                    @Html.ActionLink("Liste des mouvements", "GetMouvementBien")
                </div>

            </div>
        </div>
    </div>
</div>