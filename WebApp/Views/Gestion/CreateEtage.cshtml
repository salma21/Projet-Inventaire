@model Domain.Etage

@{

    List<string> listbatiment = new List<string>();
    List<string> listdeleg = new List<string>();
}

<link type="text/css" href="../../Content/Site.css" rel="stylesheet" />
<script src="http://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js"></script>
<script language="javascript" type="text/javascript">
    function getDeleg(_stateId) {
        var procemessage = "<option value='0'>Encours...</option>";
        $("#ddldeleg").html(procemessage).show();
        var url = "/Gestion/findDelegationByGouvernorat/";

        $.ajax({
            url: url,
            data: { stateid: _stateId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddldeleg").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>
<script language="javascript" type="text/javascript">
    function GetCity(_delegId) {
        var procemessage = "<option value='0'>Encours...</option>";
        $("#ddlcity").html(procemessage).show();
        var url = "/Gestion/getBatimentByDelegation/";

        $.ajax({
            url: url,
            data: { delegid: _delegId },
            cache: false,
            type: "POST",
            success: function (data) {
                var markup = "<option value='0'>--Choisir--</option>";
                for (var x = 0; x < data.length; x++) {
                    markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
                }
                $("#ddlcity").html(markup).show();
            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }


    function GetBatTest(_delegId) {
       
        var url = "/Gestion/OpenPopup/";

        $.ajax({
            url: url,
            data: { delegid: _delegId },
            cache: false,
            type: "POST",
            success: function (data) {

                if (data !="")
                {
                alert (data)}


            },
            error: function (reponse) {
                alert("error : " + reponse);
            }
        });

    }
</script>

@*function myFunction() {
    var x;
    if (confirm("Press a button!") == true) {
        x = "You pressed OK!";
    } else {
        x = "You pressed Cancel!";
    }
    document.getElementById("demo").innerHTML = x;
}*@

@*kioiuiou*@
<div class="row">
    <div class="col-md-12">
        <div class="panel panel-default">
            <div class="panel-title">
                Étage 
            </div>
            <div class="panel-body">



                <div class="panel panel-default">

                    @using (@Html.BeginForm("CreateEtage", "Gestion", FormMethod.Post,
new { @id = "frmId", @class = "fieldset-form" }))
                    {

                        <div class="form-horizontal">
                            <h4>Ajout d'étage</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @*<div class="form-group">
                                <label class="control-label col-lg-4" style="font-style:oblique;">Gouvernerat </label>
                                <div class="col-lg-6">
                                    @Html.DropDownList( (SelectList)ViewData["gouvernorat"], "--Choisir--", new { @class = "form-control", required = "" , @onchange = "javascript:getDeleg(this.value);" })
                                </div>
                            </div>*@
                            <div class="form-group">
                                <label class="control-label col-lg-4">Ville</label>
                                <div class="col-lg-6">
                                       @Html.DropDownListFor(m => m.idDelegation , (SelectList)ViewData["delegation"], "--Choisir--", new { @id = "ddldeleg", @class = "form-control", required = "True", @onchange = "javascript:GetCity(this.value);" })
                                    

                                </div>
                            </div>
                                <div class="form-group">
                                    <label class="control-label col-lg-4">Batiment</label>
                                    <div class="col-lg-6">
                                         @Html.DropDownListFor(m => m.idBatiment, new SelectList(listbatiment), "--Choisir--", new { @id = "ddlcity", @class = "form-control", required = "True"  })


                                    </div>
                                </div>

                              

                                <div class="form-group">
                                    <label class="control-label col-lg-4">Code à barres </label>
                                    <div class="col-lg-6">
                                        @Html.EditorFor(model => model.code_a_barre, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.code_a_barre, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            <div class="form-group">
                                <label class="control-label col-lg-4">Code étage </label>
                                <div class="col-lg-6">
                                    @Html.EditorFor(model => model.code, new { htmlAttributes = new {@id= "btnpopu", @class = "form-control" , @onchange = "javascript:GetBatTest(this.value)" } })
                                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                                    @*<input type="button" id="btnpopu" value="Open Modeless popup" onclick="ShowPopup();" />*@
                                </div>
                            </div>

                            

                                <div class="form-group">
                                    <label class="control-label col-lg-4">Désignation</label>
                                    <div class="col-lg-6">

                                        @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })

                                    </div>
                                </div>

                            </div>
                            <div style="text-align: center;">
                                <input type="submit" value="Valider" class="btn btn-default" />

                                <button type="reset" class="btn btn-white">@Html.ActionLink("Annuler", "GetEtage")</button>

                            </div>

                            @*</div>*@



                            }
                            <div>
                                @Html.ActionLink("Afficher la liste des étages", "GetEtage")
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    
             