@model Domain.Etage


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>EditEtage</title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(mpdel => Model.Id_etage)
                       <div class="form-horizontal">
            <h4>Etage</h4>
            <hr />
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label class="control-label col-lg-4">Ville</label>
                <div class="col-lg-6">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @* @Html.DropDownListFor(model => model.idDelegation, (SelectList)ViewData["delegation"], "--Choisir--", new { @class = "form-control", required = "" })*@
                </div>
            </div>
    
            @Html.TextBoxFor(model => model.Batiment.Delegation.libelle, new { @class = "form-control", @readonly = "readonly" })
    
            @Html.ValidationMessageFor(model => model.idDelegation, String.Empty, new { @class = "test" })
         
    
            <div class="form-group">
                @Html.TextBoxFor(model => model.Batiment.description, new { @class = "form-control", @readonly = "readonly" })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.idBatiment, String.Empty, new { @class = "test" })
                    @Html.TextBoxFor(model => model.code_a_barre, new { @class = "form-control", required = "", @readonly = "readonly" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-lg-4">Batiment</label>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(model => model.code_a_barre, String.Empty, new { @class = "test" })
                    @*  @Html.DropDownListFor(model => model.idBatiment, (SelectList)ViewData["batiment"], "--Choisir--", new { @class = "form-control", required = "" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.EditorFor(model => model.code, new { htmlAttributes = new { @class = "form-control" } })
                <div class="col-md-10">
                    @Html.ValidationMessageFor(model => model.code, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>
    
            <div class="form-group">
                <label class="control-label col-lg-4">Code à barres </label>
                <div class="col-lg-6">
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                    @Html.ActionLink("Annuler", "GetEtage")
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

    }
    
    <div>
        @Html.ActionLink("Afficher la liste des étages", "GetEtage")
    </div>
</body>
</html>
